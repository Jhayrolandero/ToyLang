#!/usr/bin/env python3

import sys
import os
import argparse

# Get the directory where this script is located
script_dir = os.path.dirname(os.path.abspath(__file__))

# Add the script directory to Python path
sys.path.insert(0, script_dir)

# Import the interpreter
from use_case import run_file

def print_help():
    print("""Chan Programming Language

Usage:
    chan run <filename> [options]    Run a Chan program file
    chan --help                      Show this help message
    chan --version                   Show version information

Options:
    --debug, -d    Enable debug mode (shows tokens, AST, and execution trace)

Examples:
    chan run program.chan            Run program.chan
    chan run test.chan --debug       Run test.chan with debug output
    chan run ./test.chan -d          Run test.chan with debug output

Note:
    - Files must have .chan extension
    - For interactive mode, run without arguments""")

def print_version():
    print("Chan Programming Language v1.0.0")

def main():
    parser = argparse.ArgumentParser(description='Chan Programming Language', add_help=False)
    parser.add_argument('command', nargs='?', help='Command to execute (run)')
    parser.add_argument('filename', nargs='?', help='File to run')
    parser.add_argument('--debug', '-d', action='store_true', help='Enable debug mode')
    parser.add_argument('--help', '-h', action='store_true', help='Show help message')
    parser.add_argument('--version', '-v', action='store_true', help='Show version information')

    args = parser.parse_args()

    if args.help:
        print_help()
        sys.exit(0)
    elif args.version:
        print_version()
        sys.exit(0)
    elif args.command == 'run' and args.filename:
        if not args.filename.endswith('.chan'):
            print("Error: File must have .chan extension")
            sys.exit(1)
        run_file(args.filename, debug=args.debug)
    else:
        print_help()
        sys.exit(1)

if __name__ == '__main__':
    main() 